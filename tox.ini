[tox]
envlist = flake8

[testenv]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
    python_magic
setenv =
    PYTHONPATH = {toxinidir}/tests:{toxinidir}
avocado_cmd =
    avocado run -p TESTLOCAL=true --max-parallel-tasks=1
unit_tests =
    {toxinidir}/tests/unittests
stage_tests =
    {toxinidir}/tests/cleaner_tests \
    {toxinidir}/tests/collect_tests \
    {toxinidir}/tests/report_tests \
    {toxinidir}/tests/vendor_tests
py_files =
    setup.py plugins_overview.py sos tests
foreman_tests =
    {toxinidir}/tests/product_tests/foreman

[testenv:flake8]
deps = flake8
commands = flake8 {posargs:{[testenv]py_files}}

[testenv:pylint]
deps =
    {[testenv]deps}
    pylint
commands = pylint -v --rcfile={toxinidir}/pylintrc {posargs:{[testenv]py_files}}

[testenv:unit_tests]
basepython = python3
commands =
    avocado run {posargs:{[testenv]unit_tests}}

[testenv:stageone_tests]
basepython = python3
commands =
    {[testenv]avocado_cmd} -t stageone {posargs:{[testenv]stage_tests}}

[testenv:stagetwo_tests]
basepython = python3
sitepackages = True
commands =
    {[testenv]avocado_cmd} -t stagetwo {posargs:{[testenv]stage_tests}}

[testenv:foreman_tests]
basepython = python3
commands =
    {[testenv]avocado_cmd} -t foreman {posargs:{[testenv]foreman_tests}}

[testenv:coverage]
basepython = python3
setenv =
    {[testenv]setenv}
    COVERAGE_RUN = "true"
deps =
    {[testenv]deps}
    coverage
commands =
    coverage erase
    coverage run -m avocado run {posargs:{[testenv]unit_tests}}
    coverage combine
    coverage html -d cover
    coverage report
